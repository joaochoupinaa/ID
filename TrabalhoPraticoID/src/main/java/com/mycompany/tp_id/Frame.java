/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tp_id;

import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;
import net.sf.saxon.s9api.SaxonApiException;
import net.sf.saxon.s9api.XdmValue;
import net.sf.saxon.trans.XPathException;
import org.jdom2.Document;
import org.jdom2.Element;

/**
 *
 * @author btiag
 */
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Xpath_NomePais = new javax.swing.JDialog();
        NomePais = new javax.swing.JTextField();
        LabelJanelaNomePais = new javax.swing.JLabel();
        BotaoJanelaNomePais = new javax.swing.JButton();
        Xpath_PaisContinente = new javax.swing.JDialog();
        NomeContinente = new javax.swing.JTextField();
        LabelJanelaPaisContinete = new javax.swing.JLabel();
        BotaoJanelaPaisContinente = new javax.swing.JButton();
        Xpath_FactoPais = new javax.swing.JDialog();
        NomePaisFacto = new javax.swing.JTextField();
        LabelJanelaNomePaisFacto = new javax.swing.JLabel();
        BotaoJanelaFactoPais = new javax.swing.JButton();
        Xpath_FiltPaisPop = new javax.swing.JDialog();
        LabelJanelaPaisContinete1 = new javax.swing.JLabel();
        BotaoJanelaFiltPaisPop = new javax.swing.JButton();
        NomeContinente1 = new javax.swing.JTextField();
        LabelJanelaNumeroPop = new javax.swing.JLabel();
        NumeroPop = new javax.swing.JTextField();
        XML_RemoverPais = new javax.swing.JDialog();
        NomePaisRemover = new javax.swing.JTextField();
        LabelJanelaNomePaisRemover = new javax.swing.JLabel();
        BotaoJanela2 = new javax.swing.JButton();
        XML_AdicionarPais = new javax.swing.JDialog();
        NomePaisAdicionar = new javax.swing.JTextField();
        LabelNomePaisAdicionar = new javax.swing.JLabel();
        BotaoJanelaAdicionarPais = new javax.swing.JButton();
        XSLT_NomeContinente = new javax.swing.JDialog();
        LabelJanela4 = new javax.swing.JLabel();
        BotaoJanelaXSLTContinente = new javax.swing.JButton();
        NomeContinenteXSLT = new javax.swing.JTextField();
        XML_AlterarDadosPaises = new javax.swing.JDialog();
        LabelJanela3_4 = new javax.swing.JLabel();
        ValorARemover = new javax.swing.JTextField();
        LabelJanela3_5 = new javax.swing.JLabel();
        AlterarValorJanela3 = new javax.swing.JTextField();
        LabelJanela3 = new javax.swing.JLabel();
        LabelJanela3_6 = new javax.swing.JLabel();
        LabelJanela3_2 = new javax.swing.JLabel();
        LabelJanela3_3 = new javax.swing.JLabel();
        nModificacoes = new javax.swing.JComboBox<>();
        nCamposModificar = new javax.swing.JComboBox<>();
        paisModificarJanela3 = new javax.swing.JTextField();
        BotaoJanelaModificar = new javax.swing.JButton();
        XML_AlteraDadosFactos = new javax.swing.JDialog();
        LabelJanela3_7 = new javax.swing.JLabel();
        LabelJanela3_8 = new javax.swing.JLabel();
        nModificacoes1 = new javax.swing.JComboBox<>();
        nCamposModificar1 = new javax.swing.JComboBox<>();
        paisModificarJanela4 = new javax.swing.JTextField();
        BotaoJanelaModificar1 = new javax.swing.JButton();
        LabelJanela3_9 = new javax.swing.JLabel();
        ValorARemover1 = new javax.swing.JTextField();
        LabelJanela3_10 = new javax.swing.JLabel();
        AlterarValorJanela4 = new javax.swing.JTextField();
        LabelJanela5 = new javax.swing.JLabel();
        LabelJanela3_11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        XMLcodeArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        JMenuPrincipal = new javax.swing.JMenu();
        jMenuItemResetFicheiros = new javax.swing.JMenuItem();
        jMenuItemSair = new javax.swing.JMenuItem();
        jMenuXML = new javax.swing.JMenu();
        jMenuItemFichXMLPAISES = new javax.swing.JMenuItem();
        jMenuItemFichXMLFACTOS = new javax.swing.JMenuItem();
        jMenuItemAdicionarPais = new javax.swing.JMenuItem();
        jMenuItemRemoverPais = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuXPATH = new javax.swing.JMenu();
        jMenuXpathNomePais = new javax.swing.JMenuItem();
        jMenuXpathPaisContinente = new javax.swing.JMenuItem();
        jMenuXpathFactoPais = new javax.swing.JMenuItem();
        jMenuXpathPaisPopuloso = new javax.swing.JMenuItem();
        jMenuXpathFiltPaisPop = new javax.swing.JMenuItem();
        jMenuValidar = new javax.swing.JMenu();
        jMenuItemDTDPaises = new javax.swing.JMenuItem();
        jMenuItemXSDPaises = new javax.swing.JMenuItem();
        jMenuItemDTDFactos = new javax.swing.JMenuItem();
        jMenuItemXSDFactos = new javax.swing.JMenuItem();
        jMenuXSLT = new javax.swing.JMenu();
        jMenuItemBandeirasDoPais = new javax.swing.JMenuItem();
        jMenuItemListagemPaisesTXT = new javax.swing.JMenuItem();
        jMenuItemXML5PaisesMaisPop = new javax.swing.JMenuItem();
        jMenuItemBandeirasPaisesCont = new javax.swing.JMenuItem();
        jMenuItemJuncaoPaisesFactos = new javax.swing.JMenuItem();
        jMenuItemCapitaisPaises = new javax.swing.JMenuItem();
        jMenuItemPopContinente = new javax.swing.JMenuItem();
        jMenuItemCrescPop5 = new javax.swing.JMenuItem();

        LabelJanelaNomePais.setText("Nome do pa√≠s:");

        BotaoJanelaNomePais.setText("OK");
        BotaoJanelaNomePais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoJanelaNomePaisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Xpath_NomePaisLayout = new javax.swing.GroupLayout(Xpath_NomePais.getContentPane());
        Xpath_NomePais.getContentPane().setLayout(Xpath_NomePaisLayout);
        Xpath_NomePaisLayout.setHorizontalGroup(
            Xpath_NomePaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Xpath_NomePaisLayout.createSequentialGroup()
                .addGroup(Xpath_NomePaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Xpath_NomePaisLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(Xpath_NomePaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NomePais, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelJanelaNomePais)))
                    .addGroup(Xpath_NomePaisLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(BotaoJanelaNomePais, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        Xpath_NomePaisLayout.setVerticalGroup(
            Xpath_NomePaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Xpath_NomePaisLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(LabelJanelaNomePais)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NomePais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(BotaoJanelaNomePais, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );

        LabelJanelaPaisContinete.setText("Nome do Continente:");

        BotaoJanelaPaisContinente.setText("OK");
        BotaoJanelaPaisContinente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoJanelaPaisContinenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Xpath_PaisContinenteLayout = new javax.swing.GroupLayout(Xpath_PaisContinente.getContentPane());
        Xpath_PaisContinente.getContentPane().setLayout(Xpath_PaisContinenteLayout);
        Xpath_PaisContinenteLayout.setHorizontalGroup(
            Xpath_PaisContinenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Xpath_PaisContinenteLayout.createSequentialGroup()
                .addGroup(Xpath_PaisContinenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Xpath_PaisContinenteLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(Xpath_PaisContinenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NomeContinente, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelJanelaPaisContinete)))
                    .addGroup(Xpath_PaisContinenteLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(BotaoJanelaPaisContinente, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        Xpath_PaisContinenteLayout.setVerticalGroup(
            Xpath_PaisContinenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Xpath_PaisContinenteLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(LabelJanelaPaisContinete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NomeContinente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(BotaoJanelaPaisContinente, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );

        NomePaisFacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomePaisFactoActionPerformed(evt);
            }
        });

        LabelJanelaNomePaisFacto.setText("Nome do pa√≠s:");

        BotaoJanelaFactoPais.setText("OK");
        BotaoJanelaFactoPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoJanelaFactoPaisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Xpath_FactoPaisLayout = new javax.swing.GroupLayout(Xpath_FactoPais.getContentPane());
        Xpath_FactoPais.getContentPane().setLayout(Xpath_FactoPaisLayout);
        Xpath_FactoPaisLayout.setHorizontalGroup(
            Xpath_FactoPaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Xpath_FactoPaisLayout.createSequentialGroup()
                .addGroup(Xpath_FactoPaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Xpath_FactoPaisLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(Xpath_FactoPaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NomePaisFacto, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelJanelaNomePaisFacto)))
                    .addGroup(Xpath_FactoPaisLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(BotaoJanelaFactoPais, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        Xpath_FactoPaisLayout.setVerticalGroup(
            Xpath_FactoPaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Xpath_FactoPaisLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(LabelJanelaNomePaisFacto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NomePaisFacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(BotaoJanelaFactoPais, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );

        LabelJanelaPaisContinete1.setText("Nome do Continente:");

        BotaoJanelaFiltPaisPop.setText("OK");
        BotaoJanelaFiltPaisPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoJanelaFiltPaisPopActionPerformed(evt);
            }
        });

        LabelJanelaNumeroPop.setText("Numero de Popula√ß√£o (valor acima de: )");

        NumeroPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumeroPopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Xpath_FiltPaisPopLayout = new javax.swing.GroupLayout(Xpath_FiltPaisPop.getContentPane());
        Xpath_FiltPaisPop.getContentPane().setLayout(Xpath_FiltPaisPopLayout);
        Xpath_FiltPaisPopLayout.setHorizontalGroup(
            Xpath_FiltPaisPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Xpath_FiltPaisPopLayout.createSequentialGroup()
                .addGroup(Xpath_FiltPaisPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Xpath_FiltPaisPopLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(Xpath_FiltPaisPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NomeContinente1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelJanelaPaisContinete1)
                            .addComponent(NumeroPop, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelJanelaNumeroPop)))
                    .addGroup(Xpath_FiltPaisPopLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(BotaoJanelaFiltPaisPop, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        Xpath_FiltPaisPopLayout.setVerticalGroup(
            Xpath_FiltPaisPopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Xpath_FiltPaisPopLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(LabelJanelaPaisContinete1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NomeContinente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(LabelJanelaNumeroPop)
                .addGap(18, 18, 18)
                .addComponent(NumeroPop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(BotaoJanelaFiltPaisPop, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        LabelJanelaNomePaisRemover.setText("Nome do pa√≠s a remover:");

        BotaoJanela2.setText("OK");
        BotaoJanela2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoJanela2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout XML_RemoverPaisLayout = new javax.swing.GroupLayout(XML_RemoverPais.getContentPane());
        XML_RemoverPais.getContentPane().setLayout(XML_RemoverPaisLayout);
        XML_RemoverPaisLayout.setHorizontalGroup(
            XML_RemoverPaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(XML_RemoverPaisLayout.createSequentialGroup()
                .addGroup(XML_RemoverPaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(XML_RemoverPaisLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(XML_RemoverPaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NomePaisRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelJanelaNomePaisRemover)))
                    .addGroup(XML_RemoverPaisLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(BotaoJanela2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        XML_RemoverPaisLayout.setVerticalGroup(
            XML_RemoverPaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(XML_RemoverPaisLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(LabelJanelaNomePaisRemover)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NomePaisRemover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(BotaoJanela2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );

        LabelNomePaisAdicionar.setText("Nome do escritor a adicionar:");

        BotaoJanelaAdicionarPais.setText("OK");
        BotaoJanelaAdicionarPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoJanelaAdicionarPaisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout XML_AdicionarPaisLayout = new javax.swing.GroupLayout(XML_AdicionarPais.getContentPane());
        XML_AdicionarPais.getContentPane().setLayout(XML_AdicionarPaisLayout);
        XML_AdicionarPaisLayout.setHorizontalGroup(
            XML_AdicionarPaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(XML_AdicionarPaisLayout.createSequentialGroup()
                .addGroup(XML_AdicionarPaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(XML_AdicionarPaisLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(XML_AdicionarPaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelNomePaisAdicionar)
                            .addComponent(NomePaisAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(XML_AdicionarPaisLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(BotaoJanelaAdicionarPais, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        XML_AdicionarPaisLayout.setVerticalGroup(
            XML_AdicionarPaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(XML_AdicionarPaisLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(LabelNomePaisAdicionar)
                .addGap(37, 37, 37)
                .addComponent(NomePaisAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(BotaoJanelaAdicionarPais, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );

        LabelJanela4.setText("Nome do continente:");

        BotaoJanelaXSLTContinente.setText("OK");
        BotaoJanelaXSLTContinente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoJanelaXSLTContinenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout XSLT_NomeContinenteLayout = new javax.swing.GroupLayout(XSLT_NomeContinente.getContentPane());
        XSLT_NomeContinente.getContentPane().setLayout(XSLT_NomeContinenteLayout);
        XSLT_NomeContinenteLayout.setHorizontalGroup(
            XSLT_NomeContinenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(XSLT_NomeContinenteLayout.createSequentialGroup()
                .addGroup(XSLT_NomeContinenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(XSLT_NomeContinenteLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(XSLT_NomeContinenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NomeContinenteXSLT, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelJanela4)))
                    .addGroup(XSLT_NomeContinenteLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(BotaoJanelaXSLTContinente, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        XSLT_NomeContinenteLayout.setVerticalGroup(
            XSLT_NomeContinenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(XSLT_NomeContinenteLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(LabelJanela4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NomeContinenteXSLT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(BotaoJanelaXSLTContinente, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );

        LabelJanela3_4.setText("Pais a modificar: ");

        ValorARemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValorARemoverActionPerformed(evt);
            }
        });

        LabelJanela3_5.setText("Valor a adicionar:");

        LabelJanela3.setText("<html> Tipo de modifica√ß√£o ao ficheiro XML: ");

        LabelJanela3_6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LabelJanela3_6.setText("<html>*Dependendo do tipo de modifica√ß√£o, os campos \"valor a remover\" e \"valor a adicionar\" podem n√£o ter utilidade.");
        LabelJanela3_6.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        LabelJanela3_2.setText("Campo a modificar: ");

        LabelJanela3_3.setText("Valor a remover: ");

        nModificacoes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Remover campo", "Adicionar Campo", "Alterar Campo"}));
        nModificacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nModificacoesActionPerformed(evt);
            }
        });

        nCamposModificar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "nome", "continente", "presidente", "bandeira"}));
        nCamposModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nCamposModificarActionPerformed(evt);
            }
        });

        BotaoJanelaModificar.setText("OK");
        BotaoJanelaModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoJanelaModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout XML_AlterarDadosPaisesLayout = new javax.swing.GroupLayout(XML_AlterarDadosPaises.getContentPane());
        XML_AlterarDadosPaises.getContentPane().setLayout(XML_AlterarDadosPaisesLayout);
        XML_AlterarDadosPaisesLayout.setHorizontalGroup(
            XML_AlterarDadosPaisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(XML_AlterarDadosPaisesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(XML_AlterarDadosPaisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(XML_AlterarDadosPaisesLayout.createSequentialGroup()
                        .addGroup(XML_AlterarDadosPaisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(XML_AlterarDadosPaisesLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(LabelJanela3_5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AlterarValorJanela3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, XML_AlterarDadosPaisesLayout.createSequentialGroup()
                                .addComponent(LabelJanela3_6, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BotaoJanelaModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, XML_AlterarDadosPaisesLayout.createSequentialGroup()
                                .addComponent(LabelJanela3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nModificacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(0, 51, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, XML_AlterarDadosPaisesLayout.createSequentialGroup()
                        .addComponent(LabelJanela3_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nCamposModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(XML_AlterarDadosPaisesLayout.createSequentialGroup()
                        .addGroup(XML_AlterarDadosPaisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(XML_AlterarDadosPaisesLayout.createSequentialGroup()
                                .addComponent(LabelJanela3_3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ValorARemover, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(XML_AlterarDadosPaisesLayout.createSequentialGroup()
                                .addComponent(LabelJanela3_4)
                                .addGap(18, 18, 18)
                                .addComponent(paisModificarJanela3, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        XML_AlterarDadosPaisesLayout.setVerticalGroup(
            XML_AlterarDadosPaisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(XML_AlterarDadosPaisesLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(XML_AlterarDadosPaisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelJanela3_4)
                    .addComponent(paisModificarJanela3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(XML_AlterarDadosPaisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelJanela3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nModificacoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(XML_AlterarDadosPaisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nCamposModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelJanela3_2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(XML_AlterarDadosPaisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelJanela3_3)
                    .addComponent(ValorARemover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(XML_AlterarDadosPaisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AlterarValorJanela3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelJanela3_5))
                .addGap(18, 18, 18)
                .addGroup(XML_AlterarDadosPaisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, XML_AlterarDadosPaisesLayout.createSequentialGroup()
                        .addComponent(BotaoJanelaModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, XML_AlterarDadosPaisesLayout.createSequentialGroup()
                        .addComponent(LabelJanela3_6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        LabelJanela3_7.setText("Campo a modificar: ");

        LabelJanela3_8.setText("Valor a remover: ");

        nModificacoes1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Remover campo", "Adicionar Campo", "Alterar Campo"}));
        nModificacoes1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nModificacoes1ActionPerformed(evt);
            }
        });

        nCamposModificar1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "nome", "continente", "capital", "moeda", "populacao","area","crescimentoPopulacional","cidade","dominioInternet","idioma","pais_vizinho"}));
        nCamposModificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nCamposModificar1ActionPerformed(evt);
            }
        });

        BotaoJanelaModificar1.setText("OK");
        BotaoJanelaModificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoJanelaModificar1ActionPerformed(evt);
            }
        });

        LabelJanela3_9.setText("Pais a modificar: ");

        ValorARemover1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValorARemover1ActionPerformed(evt);
            }
        });

        LabelJanela3_10.setText("Valor a adicionar:");

        LabelJanela5.setText("<html> Tipo de modifica√ß√£o ao ficheiros XML: ");

        LabelJanela3_11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LabelJanela3_11.setText("<html>*Dependendo do tipo de modifica√ß√£o, os campos \"valor a remover\" e \"valor a adicionar\" podem n√£o ter utilidade.");
        LabelJanela3_11.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        javax.swing.GroupLayout XML_AlteraDadosFactosLayout = new javax.swing.GroupLayout(XML_AlteraDadosFactos.getContentPane());
        XML_AlteraDadosFactos.getContentPane().setLayout(XML_AlteraDadosFactosLayout);
        XML_AlteraDadosFactosLayout.setHorizontalGroup(
            XML_AlteraDadosFactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(XML_AlteraDadosFactosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(XML_AlteraDadosFactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(XML_AlteraDadosFactosLayout.createSequentialGroup()
                        .addGroup(XML_AlteraDadosFactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(XML_AlteraDadosFactosLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(LabelJanela3_10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AlterarValorJanela4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, XML_AlteraDadosFactosLayout.createSequentialGroup()
                                .addComponent(LabelJanela3_11, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BotaoJanelaModificar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, XML_AlteraDadosFactosLayout.createSequentialGroup()
                                .addComponent(LabelJanela5, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nModificacoes1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(0, 71, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, XML_AlteraDadosFactosLayout.createSequentialGroup()
                        .addComponent(LabelJanela3_7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nCamposModificar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(XML_AlteraDadosFactosLayout.createSequentialGroup()
                        .addGroup(XML_AlteraDadosFactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(XML_AlteraDadosFactosLayout.createSequentialGroup()
                                .addComponent(LabelJanela3_8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ValorARemover1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(XML_AlteraDadosFactosLayout.createSequentialGroup()
                                .addComponent(LabelJanela3_9)
                                .addGap(18, 18, 18)
                                .addComponent(paisModificarJanela4, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        XML_AlteraDadosFactosLayout.setVerticalGroup(
            XML_AlteraDadosFactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(XML_AlteraDadosFactosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(XML_AlteraDadosFactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelJanela3_9)
                    .addComponent(paisModificarJanela4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(XML_AlteraDadosFactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelJanela5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nModificacoes1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(XML_AlteraDadosFactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nCamposModificar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelJanela3_7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(XML_AlteraDadosFactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelJanela3_8)
                    .addComponent(ValorARemover1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(XML_AlteraDadosFactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AlterarValorJanela4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelJanela3_10))
                .addGap(18, 18, 18)
                .addGroup(XML_AlteraDadosFactosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, XML_AlteraDadosFactosLayout.createSequentialGroup()
                        .addComponent(BotaoJanelaModificar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, XML_AlteraDadosFactosLayout.createSequentialGroup()
                        .addComponent(LabelJanela3_11, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        XMLcodeArea.setColumns(20);
        XMLcodeArea.setRows(5);
        jScrollPane1.setViewportView(XMLcodeArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        JMenuPrincipal.setText("Principal");

        jMenuItemResetFicheiros.setText("Reset Ficheiros");
        jMenuItemResetFicheiros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemResetFicheirosActionPerformed(evt);
            }
        });
        JMenuPrincipal.add(jMenuItemResetFicheiros);

        jMenuItemSair.setText("Sair");
        jMenuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSairActionPerformed(evt);
            }
        });
        JMenuPrincipal.add(jMenuItemSair);

        jMenuBar1.add(JMenuPrincipal);

        jMenuXML.setText("XML");

        jMenuItemFichXMLPAISES.setText("Ver Ficheiro XML Paises");
        jMenuItemFichXMLPAISES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFichXMLPAISESActionPerformed(evt);
            }
        });
        jMenuXML.add(jMenuItemFichXMLPAISES);

        jMenuItemFichXMLFACTOS.setText("Ver Ficheiro XML Factos");
        jMenuItemFichXMLFACTOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFichXMLFACTOSActionPerformed(evt);
            }
        });
        jMenuXML.add(jMenuItemFichXMLFACTOS);

        jMenuItemAdicionarPais.setText("Adicionar Pa√≠s");
        jMenuItemAdicionarPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAdicionarPaisActionPerformed(evt);
            }
        });
        jMenuXML.add(jMenuItemAdicionarPais);

        jMenuItemRemoverPais.setText("Remover Pa√≠s");
        jMenuItemRemoverPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRemoverPaisActionPerformed(evt);
            }
        });
        jMenuXML.add(jMenuItemRemoverPais);

        jMenuItem1.setText("Alterar Dados XML Paises");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuXML.add(jMenuItem1);

        jMenuItem2.setText("Alterar Dados XML Factos");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenuXML.add(jMenuItem2);

        jMenuBar1.add(jMenuXML);

        jMenuXPATH.setText("XPATH");

        jMenuXpathNomePais.setText("Nome Pa√≠s");
        jMenuXpathNomePais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuXpathNomePaisActionPerformed(evt);
            }
        });
        jMenuXPATH.add(jMenuXpathNomePais);

        jMenuXpathPaisContinente.setText("Pesquisar Pa√≠ses de um Continente");
        jMenuXpathPaisContinente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuXpathPaisContinenteActionPerformed(evt);
            }
        });
        jMenuXPATH.add(jMenuXpathPaisContinente);

        jMenuXpathFactoPais.setText("Pesquisar Factos de um Pa√≠s");
        jMenuXpathFactoPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuXpathFactoPaisActionPerformed(evt);
            }
        });
        jMenuXPATH.add(jMenuXpathFactoPais);

        jMenuXpathPaisPopuloso.setText("Pa√≠s mais populoso");
        jMenuXpathPaisPopuloso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuXpathPaisPopulosoActionPerformed(evt);
            }
        });
        jMenuXPATH.add(jMenuXpathPaisPopuloso);

        jMenuXpathFiltPaisPop.setText("Filtrar Pa√≠ses de um continente por Popula√ß√£o");
        jMenuXpathFiltPaisPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuXpathFiltPaisPopActionPerformed(evt);
            }
        });
        jMenuXPATH.add(jMenuXpathFiltPaisPop);

        jMenuBar1.add(jMenuXPATH);

        jMenuValidar.setText("Validar");

        jMenuItemDTDPaises.setText("DTD Pa√≠ses");
        jMenuItemDTDPaises.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDTDPaisesActionPerformed(evt);
            }
        });
        jMenuValidar.add(jMenuItemDTDPaises);

        jMenuItemXSDPaises.setText("XSD Pa√≠ses");
        jMenuItemXSDPaises.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemXSDPaisesActionPerformed(evt);
            }
        });
        jMenuValidar.add(jMenuItemXSDPaises);

        jMenuItemDTDFactos.setText("DTD Factos");
        jMenuItemDTDFactos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDTDFactosActionPerformed(evt);
            }
        });
        jMenuValidar.add(jMenuItemDTDFactos);

        jMenuItemXSDFactos.setText("XSD Factos");
        jMenuItemXSDFactos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemXSDFactosActionPerformed(evt);
            }
        });
        jMenuValidar.add(jMenuItemXSDFactos);

        jMenuBar1.add(jMenuValidar);

        jMenuXSLT.setText("XSLT");
        jMenuXSLT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuXSLTActionPerformed(evt);
            }
        });

        jMenuItemBandeirasDoPais.setText("HTML bandeiras do pais");
        jMenuItemBandeirasDoPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBandeirasDoPaisActionPerformed(evt);
            }
        });
        jMenuXSLT.add(jMenuItemBandeirasDoPais);

        jMenuItemListagemPaisesTXT.setText("Listagem dos pa√≠ses em TXT");
        jMenuItemListagemPaisesTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemListagemPaisesTXTActionPerformed(evt);
            }
        });
        jMenuXSLT.add(jMenuItemListagemPaisesTXT);

        jMenuItemXML5PaisesMaisPop.setText("XML 5 pa√≠ses mais populosos");
        jMenuItemXML5PaisesMaisPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemXML5PaisesMaisPopActionPerformed(evt);
            }
        });
        jMenuXSLT.add(jMenuItemXML5PaisesMaisPop);

        jMenuItemBandeirasPaisesCont.setText("HTML bandeiras de paises de um continente");
        jMenuItemBandeirasPaisesCont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBandeirasPaisesContActionPerformed(evt);
            }
        });
        jMenuXSLT.add(jMenuItemBandeirasPaisesCont);

        jMenuItemJuncaoPaisesFactos.setText("XML juncao de pais com factos");
        jMenuItemJuncaoPaisesFactos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemJuncaoPaisesFactosActionPerformed(evt);
            }
        });
        jMenuXSLT.add(jMenuItemJuncaoPaisesFactos);

        jMenuItemCapitaisPaises.setText("TXT Capitais Pa√≠ses");
        jMenuItemCapitaisPaises.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCapitaisPaisesActionPerformed(evt);
            }
        });
        jMenuXSLT.add(jMenuItemCapitaisPaises);

        jMenuItemPopContinente.setText("XML Popula√ß√£o por continente");
        jMenuItemPopContinente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPopContinenteActionPerformed(evt);
            }
        });
        jMenuXSLT.add(jMenuItemPopContinente);

        jMenuItemCrescPop5.setText("XML 5 pa√≠ses com maior crescimento populacional");
        jMenuItemCrescPop5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCrescPop5ActionPerformed(evt);
            }
        });
        jMenuXSLT.add(jMenuItemCrescPop5);

        jMenuBar1.add(jMenuXSLT);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemFichXMLFACTOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFichXMLFACTOSActionPerformed
        Document doc = XMLJDomFunctions.lerDocumentoXML("factos.xml");
        if (doc == null) {
            JOptionPane.showMessageDialog(this,
                    "Ficheiro n√£o existe",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            String texto = XMLJDomFunctions.escreverDocumentoString(doc);
            XMLcodeArea.setText(texto);
        }
    }//GEN-LAST:event_jMenuItemFichXMLFACTOSActionPerformed

    private void jMenuItemFichXMLPAISESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFichXMLPAISESActionPerformed
        Document doc = XMLJDomFunctions.lerDocumentoXML("paises.xml");
        if (doc == null) {
            JOptionPane.showMessageDialog(this,
                    "Ficheiro n√£o existe",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            String texto = XMLJDomFunctions.escreverDocumentoString(doc);
            XMLcodeArea.setText(texto);}    }//GEN-LAST:event_jMenuItemFichXMLPAISESActionPerformed

    private void jMenuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemSairActionPerformed

    private void jMenuXpathNomePaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuXpathNomePaisActionPerformed
        Xpath_NomePais.setSize(400, 215);
        Xpath_NomePais.setLocation(200, 200);
        Xpath_NomePais.setVisible(true);
    }//GEN-LAST:event_jMenuXpathNomePaisActionPerformed

    private void jMenuXpathPaisContinenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuXpathPaisContinenteActionPerformed

        Xpath_PaisContinente.setSize(400, 215);
        Xpath_PaisContinente.setLocation(200, 200);
        Xpath_PaisContinente.setVisible(true);

    }//GEN-LAST:event_jMenuXpathPaisContinenteActionPerformed

    private void jMenuXpathFactoPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuXpathFactoPaisActionPerformed
        Xpath_FactoPais.setSize(400, 215);
        Xpath_FactoPais.setLocation(200, 200);
        Xpath_FactoPais.setVisible(true);
    }//GEN-LAST:event_jMenuXpathFactoPaisActionPerformed

    private void jMenuXpathPaisPopulosoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuXpathPaisPopulosoActionPerformed
        try {

            String xp = "/factos/pais[populacao = max(/factos/pais/number(populacao))]/nome/text()";
            XdmValue res = null;
            res = XPathFunctions.executaXpath(xp, "factos.xml");

            if (res != null && res.size() != 0) {

                XMLcodeArea.setText(XPathFunctions.listaResultado(res).toString());

            } else {
                JOptionPane.showMessageDialog(this,
                        "Nome h√° paises ou informa√ß√£o",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (SaxonApiException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuXpathPaisPopulosoActionPerformed

    private void jMenuXpathFiltPaisPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuXpathFiltPaisPopActionPerformed
        Xpath_FiltPaisPop.setSize(400, 300);
        Xpath_FiltPaisPop.setLocation(200, 200);
        Xpath_FiltPaisPop.setVisible(true);     }//GEN-LAST:event_jMenuXpathFiltPaisPopActionPerformed

    private void BotaoJanelaNomePaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoJanelaNomePaisActionPerformed
        try {
            String xp = "//pais[nome='" + NomePais.getText() + "']";
            XdmValue res = null;
            res = XPathFunctions.executaXpath(xp, "paises.xml");

            if (res != null && res.size() != 0) {

                XMLcodeArea.setText(XPathFunctions.listaResultado(res).toString());
                Xpath_NomePais.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(this,
                        "Nome de pa√≠s inexistente",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (SaxonApiException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoJanelaNomePaisActionPerformed

    private void BotaoJanelaPaisContinenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoJanelaPaisContinenteActionPerformed
        try {
            String xp = "//pais[continente='" + NomeContinente.getText() + "']/nome/text()";
            XdmValue res = null;
            res = XPathFunctions.executaXpath(xp, "paises.xml");

            if (res != null && res.size() != 0) {

                XMLcodeArea.setText(XPathFunctions.listaResultado(res).toString());
                Xpath_PaisContinente.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(this,
                        "Nome de continente inexistente",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (SaxonApiException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }    }//GEN-LAST:event_BotaoJanelaPaisContinenteActionPerformed

    private void BotaoJanelaFactoPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoJanelaFactoPaisActionPerformed
        try {

            String xp = "//pais[nome = '" + NomePaisFacto.getText() + "']";
            XdmValue res = null;
            res = XPathFunctions.executaXpath(xp, "factos.xml");

            if (res != null && res.size() != 0) {

                XMLcodeArea.setText(XPathFunctions.listaResultado(res).toString());
                Xpath_FactoPais.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(this,
                        "Nome de pa√≠s inexistente",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (SaxonApiException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoJanelaFactoPaisActionPerformed

    private void NomePaisFactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomePaisFactoActionPerformed
        try {

            String xp = "//factos[nome = '" + NomePaisFacto.getText() + "']";
            XdmValue res = null;
            res = XPathFunctions.executaXpath(xp, "factos.xml");

            if (res != null && res.size() != 0) {

                XMLcodeArea.setText(XPathFunctions.listaResultado(res).toString());
                Xpath_FactoPais.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(this,
                        "Nome de pa√≠s inexistente",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (SaxonApiException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_NomePaisFactoActionPerformed

    private void BotaoJanelaFiltPaisPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoJanelaFiltPaisPopActionPerformed
        try {
            /* //temos de usar uma auxiliar para ir buscar o iso e e depois metelo nos factos 
            String xpaux = "//pais[continente='" + NomeContinente1.getText() + "']/@CodigoISO";
            XdmValue resaux = null;
            resaux = XPathFunctions.executaXpath(xpaux, "paises.xml");*/

            //double populacaoLimite = Double.parseDouble(NumeroPop.getText());
            // Construir a express√£o XPath corrigida
            String xp = "//pais[continente='" + NomeContinente1.getText() + "' and populacao > " + NumeroPop.getText() + "]/nome/text()";

            XdmValue res = null;
            res = XPathFunctions.executaXpath(xp, "factos.xml");

            if (res != null && res.size() != 0) {

                XMLcodeArea.setText(XPathFunctions.listaResultado(res).toString());
                Xpath_FactoPais.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(this,
                        "Erro com os dados",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (SaxonApiException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }      }//GEN-LAST:event_BotaoJanelaFiltPaisPopActionPerformed

    private void NumeroPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumeroPopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumeroPopActionPerformed

    private void jMenuItemDTDPaisesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDTDPaisesActionPerformed
        try {
            int result = ValidarXML.validarDocumentoDTD("paises.xml", "paisesValidacao.dtd");

            switch (result) {
                case 0:
                    JOptionPane.showMessageDialog(this,
                            "Erro em ficheiros",
                            "Erro",
                            JOptionPane.ERROR_MESSAGE);
                    break;

                case 1:
                    JOptionPane.showMessageDialog(this,
                            "Ficheiro paises.xml valido por DTD",
                            "De Acordo com DTD",
                            JOptionPane.INFORMATION_MESSAGE);
                    break;

                case -1:
                    JOptionPane.showMessageDialog(this,
                            "Ficheiro paises.xml invalido por DTD",
                            "Nao est√° de Acordo com DTD",
                            JOptionPane.INFORMATION_MESSAGE);
                    break;

                default:
                    JOptionPane.showMessageDialog(this,
                            "Resultado imprevisto",
                            "Erro",
                            JOptionPane.ERROR_MESSAGE);
                    break;
            }
        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemDTDPaisesActionPerformed

    private void jMenuItemDTDFactosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDTDFactosActionPerformed
        try {
            int result = ValidarXML.validarDocumentoDTD("factos.xml", "factosValidacao.dtd");

            switch (result) {
                case 0:
                    JOptionPane.showMessageDialog(this,
                            "Erro em ficheiros",
                            "Erro",
                            JOptionPane.ERROR_MESSAGE);
                    break;

                case 1:
                    JOptionPane.showMessageDialog(this,
                            "Ficheiro factos.xml valido por DTD",
                            "De Acordo com DTD",
                            JOptionPane.INFORMATION_MESSAGE);
                    break;

                case -1:
                    JOptionPane.showMessageDialog(this,
                            "Ficheiro factos.xml invalido por DTD",
                            "Nao est√° de Acordo com DTD",
                            JOptionPane.INFORMATION_MESSAGE);
                    break;

                default:
                    JOptionPane.showMessageDialog(this,
                            "Resultado imprevisto",
                            "Erro",
                            JOptionPane.ERROR_MESSAGE);
                    break;
            }
        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemDTDFactosActionPerformed

    private void jMenuItemXSDPaisesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemXSDPaisesActionPerformed
        int result = ValidarXML.validarDocumentoXSD("paises.xml", "paisesValidacao.xsd");
        switch (result) {
            case 0:
                JOptionPane.showMessageDialog(this,
                        "Erro em ficheiros",
                        "Erro",
                        JOptionPane.ERROR_MESSAGE);
                break;

            case 1:
                JOptionPane.showMessageDialog(this,
                        "Ficheiro paises.xml valido por XSD",
                        "De Acordo com XSD",
                        JOptionPane.INFORMATION_MESSAGE);
                break;

            case -1:
                JOptionPane.showMessageDialog(this,
                        "Ficheiro paises.xml invalido por XSD",
                        "Nao est√° de Acordo com XSD",
                        JOptionPane.INFORMATION_MESSAGE);
                break;

            default:
                JOptionPane.showMessageDialog(this,
                        "Resultado imprevisto",
                        "Erro",
                        JOptionPane.ERROR_MESSAGE);
                break;
        }
    }//GEN-LAST:event_jMenuItemXSDPaisesActionPerformed

    private void jMenuItemXSDFactosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemXSDFactosActionPerformed
        int result = ValidarXML.validarDocumentoXSD("factos.xml", "factosValidacao.xsd");
        switch (result) {
            case 0:
                JOptionPane.showMessageDialog(this,
                        "Erro em ficheiros",
                        "Erro",
                        JOptionPane.ERROR_MESSAGE);
                break;

            case 1:
                JOptionPane.showMessageDialog(this,
                        "Ficheiro factos.xml valido por XSD",
                        "De Acordo com XSD",
                        JOptionPane.INFORMATION_MESSAGE);
                break;

            case -1:
                JOptionPane.showMessageDialog(this,
                        "Ficheiro factos.xml invalido por XSD",
                        "Nao est√° de Acordo com XSD",
                        JOptionPane.INFORMATION_MESSAGE);
                break;

            default:
                JOptionPane.showMessageDialog(this,
                        "Resultado imprevisto",
                        "Erro",
                        JOptionPane.ERROR_MESSAGE);
                break;
        }
    }//GEN-LAST:event_jMenuItemXSDFactosActionPerformed

    private void jMenuItemRemoverPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRemoverPaisActionPerformed
        XML_RemoverPais.setSize(400, 215);
        XML_RemoverPais.setLocation(200, 200);
        XML_RemoverPais.setVisible(true);
    }//GEN-LAST:event_jMenuItemRemoverPaisActionPerformed

    private void BotaoJanelaAdicionarPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoJanelaAdicionarPaisActionPerformed
        try {
            String nomePais = NomePaisAdicionar.getText();
            if (TP_ID.paisExisteEmFicheiro(nomePais)) {
                JOptionPane.showMessageDialog(this,
                        "O pa√≠s j√° existe",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                TP_ID.adicionaPaisEmFicheiro(nomePais);
                TP_ID.adicionaFactosEmFicheiro(nomePais);
                JOptionPane.showMessageDialog(this,
                        "Pais Adicionado com sucesso",
                        "Sucesso",
                        JOptionPane.INFORMATION_MESSAGE);
                XML_AdicionarPais.setVisible(false);
            }

        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoJanelaAdicionarPaisActionPerformed

    private void jMenuItemAdicionarPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAdicionarPaisActionPerformed
        XML_AdicionarPais.setSize(400, 215);
        XML_AdicionarPais.setLocation(200, 200);
        XML_AdicionarPais.setVisible(true);    }//GEN-LAST:event_jMenuItemAdicionarPaisActionPerformed

    private void jMenuItemBandeirasDoPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBandeirasDoPaisActionPerformed
        Document doc = XMLJDomFunctions.lerDocumentoXML("paises.xml");
        Document novo = JDOMFunctions_XSLT.transformaDocumento(doc, "paises.xml", "transfPaisesBandeiras.xsl");
        if (doc != null && novo != null) {
            XMLJDomFunctions.escreverDocumentoParaFicheiro(novo, "HTMLPaisesBandeiras.html");

            String url = "HTMLPaisesBandeiras.html";
            File htmlFile = new File(url);

            try {
                Desktop.getDesktop().browse(htmlFile.toURI());
            } catch (IOException ex) {
                Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this,
                    "Erro nos ficheiros",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemBandeirasDoPaisActionPerformed

    private void jMenuItemListagemPaisesTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemListagemPaisesTXTActionPerformed
        Document doc = XMLJDomFunctions.lerDocumentoXML("paises.xml");

        if (doc != null) {
            JDOMFunctions_XSLT.transformaDocumento2("paises.xml", "transfListagemPaises.xsl", "ListagemPaises.txt");
            Scanner ler = null;

            try {
                ler = new Scanner(new FileInputStream("ListagemPaises.txt"));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
            }

            StringBuilder texto = new StringBuilder();
            String linha;

            while (ler.hasNextLine()) {
                linha = ler.nextLine();
                texto = texto.append(linha).append("\n");
            }

            ler.close();
            XMLcodeArea.setText(texto.toString());
        } else {
            JOptionPane.showMessageDialog(this,
                    "Erro nos ficheiros",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }    }//GEN-LAST:event_jMenuItemListagemPaisesTXTActionPerformed

    private void jMenuItemXML5PaisesMaisPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemXML5PaisesMaisPopActionPerformed
        Document doc = XMLJDomFunctions.lerDocumentoXML("factos.xml");
        if (doc != null) {
            Document novo = JDOMFunctions_XSLT.transformaDocumento(doc, "factos.xml", "transf5PaisesMaisPop.xsl");
            XMLJDomFunctions.escreverDocumentoParaFicheiro(novo, "XML5PaisesMaisPop.xml");
            doc = XMLJDomFunctions.lerDocumentoXML("XML5PaisesMaisPop.xml");

            String t = XMLJDomFunctions.escreverDocumentoString(doc);
            XMLcodeArea.setText(t);
        } else {
            JOptionPane.showMessageDialog(this,
                    "Erro nos ficheiros",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }    }//GEN-LAST:event_jMenuItemXML5PaisesMaisPopActionPerformed

    private void BotaoJanelaXSLTContinenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoJanelaXSLTContinenteActionPerformed
        try {
            String xp = "//pais/continente[text()='" + NomeContinenteXSLT.getText() + "']";
            XdmValue res = null;
            res = XPathFunctions.executaXpath(xp, "paises.xml");

            if (res != null && res.size() != 0) {
                // Carregar o arquivo XSL
                File xslFile = new File("transfBandeirasPaisesCont.xsl");
                Source xslt = new StreamSource(xslFile);

                // Carregar o arquivo XML de entrada
                File xmlFile = new File("paises.xml");
                Source xml = new StreamSource(xmlFile);

                // Definir o valor do par√¢metro do autor
                String continente = NomeContinenteXSLT.getText();
                TransformerFactory factory = TransformerFactory.newInstance();
                Transformer transformer = factory.newTransformer(xslt);
                transformer.setParameter("continente", continente);

                // Executar a transforma√ß√£o
                File outputFile = new File("HTMLBandeiraPaisesCont.html");
                transformer.transform(xml, new StreamResult(outputFile));

                // Abrir o arquivo resultante no navegador
                if (Desktop.isDesktopSupported()) {
                    Desktop.getDesktop().browse(outputFile.toURI());
                }

                XSLT_NomeContinente.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(this,
                        "Nome de continente inexistente",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (TransformerException | IOException e) {
            e.printStackTrace();
        } catch (SaxonApiException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotaoJanelaXSLTContinenteActionPerformed

    private void jMenuXSLTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuXSLTActionPerformed

    }//GEN-LAST:event_jMenuXSLTActionPerformed

    private void jMenuItemBandeirasPaisesContActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBandeirasPaisesContActionPerformed
        XSLT_NomeContinente.setSize(400, 215);
        XSLT_NomeContinente.setLocation(200, 200);
        XSLT_NomeContinente.setVisible(true);
    }//GEN-LAST:event_jMenuItemBandeirasPaisesContActionPerformed

    private void jMenuItemJuncaoPaisesFactosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemJuncaoPaisesFactosActionPerformed
          try {
            SaxonFunctions_XQuery.xQueryToXml("XMLPaisesFactos.xml", "transfJuncaoPaisesFactos.xql");
            Document doc = XMLJDomFunctions.lerDocumentoXML("XMLPaisesFactos.xml");

            if (doc != null) {
                String t = XMLJDomFunctions.escreverDocumentoString(doc);
                XMLcodeArea.setText(t);
            } else {
                JOptionPane.showMessageDialog(this,
                        "Erro nos ficheiros",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch (XPathException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemJuncaoPaisesFactosActionPerformed

    private void nModificacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nModificacoesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nModificacoesActionPerformed

    private void nCamposModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nCamposModificarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nCamposModificarActionPerformed

    private void BotaoJanelaModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoJanelaModificarActionPerformed
        Document doc = XMLJDomFunctions.lerDocumentoXML("paises.xml");
        //String opcao = (String)nModificacoes.setSelectedItem()
        //String elemento = (String)nCamposModificar.setSelectedItem()
        //nCamposModificar

        Element raiz;
        String paisEncontrado = "";
        boolean found1 = false;
        boolean found2 = false;

        if (doc == null) {
            XML_AlterarDadosPaises.setVisible(false);
            JOptionPane.showMessageDialog(this,
                    "Ficheiro n√£o existe",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);

        } else {
            raiz = doc.getRootElement();

            List todosPaises = raiz.getChildren("pais");

            for (int i = 0; i < todosPaises.size(); i++) {
                Element pais = (Element) todosPaises.get(i); //obtem pais i da Lista

                if (paisModificarJanela3.getText().equals(pais.getChildText("nome"))) {
                    found1 = true;
                    paisEncontrado = pais.getChildText("nome");
                }
            }
        }
        if (found1) {;

            switch (nModificacoes.getSelectedIndex() + 1) {
                case 1: //remover campo
                    if (!ValorARemover.getText().equals("")) {
                        doc = ModeloXML.removeElemento(paisEncontrado, (String) nCamposModificar.getSelectedItem(), ValorARemover.getText(), doc);
                        if (doc != null) {
                            XMLJDomFunctions.escreverDocumentoParaFicheiro(doc, "paises.xml");
                            found2 = true;
                        } else {
                            found1 = false;
                            System.out.println("Erro com documento Paises");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                "Valor a remover por preencher",
                                "Informa√ß√£o",
                                JOptionPane.INFORMATION_MESSAGE);
                    }

                    break;
                case 2:
                    if (!AlterarValorJanela3.getText().equals("")) { //Adicionar
                        doc = ModeloXML.adicionaElemento(paisEncontrado, (String) nCamposModificar.getSelectedItem(), AlterarValorJanela3.getText(), doc);
                        if (doc != null) {
                            XMLJDomFunctions.escreverDocumentoParaFicheiro(doc, "paises.xml");
                            found2 = true;
                        } else {
                            found1 = false;
                            System.out.println("Erro com documento Paises");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                "Valor a adicionar por preencher",
                                "Informa√ß√£o",
                                JOptionPane.INFORMATION_MESSAGE);
                    }

                    break;
                case 3:
                    if (!ValorARemover.getText().equals("") && !AlterarValorJanela3.getText().equals("")) { //alterar
                        doc = ModeloXML.alteraElemento(paisEncontrado, (String) nCamposModificar.getSelectedItem(), ValorARemover.getText(), AlterarValorJanela3.getText(), doc);
                        if (doc != null) {
                            XMLJDomFunctions.escreverDocumentoParaFicheiro(doc, "paises.xml");
                            found2 = true;
                        } else {
                            found1 = false;
                            System.out.println("Erro com documento Obras");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                "Valor a remover e/ou a adicionar por preencher",
                                "Informa√ß√£o",
                                JOptionPane.INFORMATION_MESSAGE);
                    }

                    break;
                default:
                    System.out.println("Erro Selected Index");
            }

            if (found1 && found2) {
                XML_AlterarDadosPaises.setVisible(false);
                JOptionPane.showMessageDialog(this,
                        "Alteracoes feitas com sucesso",
                        "Informa√ß√£o",
                        JOptionPane.INFORMATION_MESSAGE);
            } else if (!found1 && !found2) {
                // XML_AlterarDados.setVisible(false);
                JOptionPane.showMessageDialog(this,
                        "Erro ao alterar elemento",
                        "Erro",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // XML_AlterarDados.setVisible(false);
            JOptionPane.showMessageDialog(this,
                    "Pa√≠s n√£o existe no ficheiro",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BotaoJanelaModificarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        XML_AlterarDadosPaises.setSize(385, 400);
        XML_AlterarDadosPaises.setLocation(200, 200);
        XML_AlterarDadosPaises.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ValorARemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValorARemoverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ValorARemoverActionPerformed

    private void nModificacoes1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nModificacoes1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nModificacoes1ActionPerformed

    private void nCamposModificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nCamposModificar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nCamposModificar1ActionPerformed

    private void BotaoJanelaModificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoJanelaModificar1ActionPerformed
        Document doc = XMLJDomFunctions.lerDocumentoXML("factos.xml");
        //String opcao = (String)nModificacoes.setSelectedItem()
        //String elemento = (String)nCamposModificar.setSelectedItem()
        //nCamposModificar

        Element raiz;
        String paisEncontrado = "";
        boolean found1 = false;
        boolean found2 = false;

        if (doc == null) {
            XML_AlterarDadosPaises.setVisible(false);
            JOptionPane.showMessageDialog(this,
                    "Ficheiro n√£o existe",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);

        } else {
            raiz = doc.getRootElement();

            List todosPaises = raiz.getChildren("pais");

            for (int i = 0; i < todosPaises.size(); i++) {
                Element pais = (Element) todosPaises.get(i); //obtem pais i da Lista

                if (paisModificarJanela4.getText().equals(pais.getChildText("nome"))) {
                    found1 = true;
                    paisEncontrado = pais.getChildText("nome");
                }
            }
        }
        if (found1) {;

            switch (nModificacoes1.getSelectedIndex() + 1) {
                case 1: //remover campo
                    if (!ValorARemover1.getText().equals("")) {
                        doc = ModeloXML.removeElemento(paisEncontrado, (String) nCamposModificar1.getSelectedItem(), ValorARemover1.getText(), doc);

                        if (doc != null) {
                            XMLJDomFunctions.escreverDocumentoParaFicheiro(doc, "factos.xml");
                            found2 = true;
                        } else {
                            found1 = false;
                            System.out.println("Erro com documento Paises");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                "Valor a remover por preencher",
                                "Informa√ß√£o",
                                JOptionPane.INFORMATION_MESSAGE);
                    }

                    break;
                case 2: //adicionar campo
                    if (!AlterarValorJanela4.getText().equals("")) {
                        String selectedItem = (String) nCamposModificar1.getSelectedItem();
                        if (selectedItem.equals("idioma")) {
                            doc = ModeloXML.adicionaElementoLista(paisEncontrado, "idiomas", AlterarValorJanela4.getText(), doc);
                        } else if (selectedItem.equals("pais_vizinho")) {
                            doc = ModeloXML.adicionaElementoLista(paisEncontrado, "paises_vizinhos", AlterarValorJanela4.getText(), doc);
                            //new javax.swing.DefaultComboBoxModel<>(new String[] { "nome", "continente", "capital", "moeda", "populacao","area","crescimentoPopulacional","cidades_mais_populosas","dominioInternet","idioma","paises_vizinhos",""})

                        } else if (selectedItem.equals("cidade")) {
                            doc = ModeloXML.adicionaElementoLista(paisEncontrado, "cidades_mais_populosas", AlterarValorJanela4.getText(), doc);
                        } else {
                            doc = ModeloXML.adicionaElemento(paisEncontrado, selectedItem, AlterarValorJanela4.getText(), doc);
                        }

                        if (doc != null) {
                            XMLJDomFunctions.escreverDocumentoParaFicheiro(doc, "factos.xml");
                            found2 = true;
                        } else {
                            found1 = false;
                            System.out.println("Erro com documento Paises");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                "Valor a adicionar por preencher",
                                "Informa√ß√£o",
                                JOptionPane.INFORMATION_MESSAGE);
                    }
                    break;

                case 3:
                    if (!ValorARemover1.getText().equals("") && !AlterarValorJanela4.getText().equals("")) { //alterar
                        doc = ModeloXML.alteraElemento(paisEncontrado, (String) nCamposModificar1.getSelectedItem(), ValorARemover1.getText(), AlterarValorJanela4.getText(), doc);
                        if (doc != null) {
                            XMLJDomFunctions.escreverDocumentoParaFicheiro(doc, "factos.xml");
                            found2 = true;
                        } else {
                            found1 = false;
                            System.out.println("Erro com documento Factos");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                "Valor a remover e/ou a adicionar por preencher",
                                "Informa√ß√£o",
                                JOptionPane.INFORMATION_MESSAGE);
                    }

                    break;
                default:
                    System.out.println("Erro Selected Index");
            }

            if (found1 && found2) {
                XML_AlteraDadosFactos.setVisible(false);
                JOptionPane.showMessageDialog(this,
                        "Alteracoes feitas com sucesso",
                        "Informa√ß√£o",
                        JOptionPane.INFORMATION_MESSAGE);
            } else if (!found1 && !found2) {
                // XML_AlterarDados.setVisible(false);
                JOptionPane.showMessageDialog(this,
                        "Erro ao alterar elemento",
                        "Erro",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // XML_AlterarDados.setVisible(false);
            JOptionPane.showMessageDialog(this,
                    "Pa√≠s n√£o existe no ficheiro",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BotaoJanelaModificar1ActionPerformed

    private void ValorARemover1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValorARemover1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ValorARemover1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        XML_AlteraDadosFactos.setSize(385, 400);
        XML_AlteraDadosFactos.setLocation(200, 200);
        XML_AlteraDadosFactos.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItemResetFicheirosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemResetFicheirosActionPerformed
        try {
            TP_ID.reset();
        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemResetFicheirosActionPerformed

    private void jMenuItemCapitaisPaisesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCapitaisPaisesActionPerformed
         Document doc = XMLJDomFunctions.lerDocumentoXML("factos.xml");

        if (doc != null) {
            JDOMFunctions_XSLT.transformaDocumento2("factos.xml", "transfListagemCapitais.xsl", "ListagemCapitais.txt");
            Scanner ler = null;

            try {
                ler = new Scanner(new FileInputStream("ListagemCapitais.txt"));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
            }

            StringBuilder texto = new StringBuilder();
            String linha;

            while (ler.hasNextLine()) {
                linha = ler.nextLine();
                texto = texto.append(linha).append("\n");
            }

            ler.close();
            XMLcodeArea.setText(texto.toString());
        } else {
            JOptionPane.showMessageDialog(this,
                    "Erro nos ficheiros",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }                                                            
                                                         
    }//GEN-LAST:event_jMenuItemCapitaisPaisesActionPerformed

    private void jMenuItemPopContinenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPopContinenteActionPerformed
         try {
            SaxonFunctions_XQuery.xQueryToXml("XMLPopContinente.xml", "transfPopContinente.xql");
            Document doc = XMLJDomFunctions.lerDocumentoXML("XMLPopContinente.xml");

            if (doc != null) {
                String t = XMLJDomFunctions.escreverDocumentoString(doc);
                XMLcodeArea.setText(t);
            } else {
                JOptionPane.showMessageDialog(this,
                        "Erro nos ficheiros",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch (XPathException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemPopContinenteActionPerformed

    private void jMenuItemCrescPop5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCrescPop5ActionPerformed
        Document doc = XMLJDomFunctions.lerDocumentoXML("factos.xml");
        if (doc != null) {
            Document novo = JDOMFunctions_XSLT.transformaDocumento(doc, "factos.xml", "transfCrescPop5.xsl");
            XMLJDomFunctions.escreverDocumentoParaFicheiro(novo, "XMLCrescPop5.xml");
            doc = XMLJDomFunctions.lerDocumentoXML("XMLCrescPop5.xml");

            String t = XMLJDomFunctions.escreverDocumentoString(doc);
            XMLcodeArea.setText(t);
        } else {
            JOptionPane.showMessageDialog(this,
                    "Erro nos ficheiros",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_jMenuItemCrescPop5ActionPerformed

    private void BotaoJanela2ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            String nomePais = NomePaisRemover.getText();
            if (TP_ID.paisExisteEmFicheiro(nomePais)) {
                TP_ID.removePaisEmFicheiro(nomePais);
                JOptionPane.showMessageDialog(this,
                        "Pais removido com sucesso",
                        "Sucesso",
                        JOptionPane.INFORMATION_MESSAGE);
                XML_RemoverPais.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(this,
                        "O pa√≠s n√£o existe nos ficheiros",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AlterarValorJanela3;
    private javax.swing.JTextField AlterarValorJanela4;
    private javax.swing.JButton BotaoJanela2;
    private javax.swing.JButton BotaoJanelaAdicionarPais;
    private javax.swing.JButton BotaoJanelaFactoPais;
    private javax.swing.JButton BotaoJanelaFiltPaisPop;
    private javax.swing.JButton BotaoJanelaModificar;
    private javax.swing.JButton BotaoJanelaModificar1;
    private javax.swing.JButton BotaoJanelaNomePais;
    private javax.swing.JButton BotaoJanelaPaisContinente;
    private javax.swing.JButton BotaoJanelaXSLTContinente;
    private javax.swing.JMenu JMenuPrincipal;
    private javax.swing.JLabel LabelJanela3;
    private javax.swing.JLabel LabelJanela3_10;
    private javax.swing.JLabel LabelJanela3_11;
    private javax.swing.JLabel LabelJanela3_2;
    private javax.swing.JLabel LabelJanela3_3;
    private javax.swing.JLabel LabelJanela3_4;
    private javax.swing.JLabel LabelJanela3_5;
    private javax.swing.JLabel LabelJanela3_6;
    private javax.swing.JLabel LabelJanela3_7;
    private javax.swing.JLabel LabelJanela3_8;
    private javax.swing.JLabel LabelJanela3_9;
    private javax.swing.JLabel LabelJanela4;
    private javax.swing.JLabel LabelJanela5;
    private javax.swing.JLabel LabelJanelaNomePais;
    private javax.swing.JLabel LabelJanelaNomePaisFacto;
    private javax.swing.JLabel LabelJanelaNomePaisRemover;
    private javax.swing.JLabel LabelJanelaNumeroPop;
    private javax.swing.JLabel LabelJanelaPaisContinete;
    private javax.swing.JLabel LabelJanelaPaisContinete1;
    private javax.swing.JLabel LabelNomePaisAdicionar;
    private javax.swing.JTextField NomeContinente;
    private javax.swing.JTextField NomeContinente1;
    private javax.swing.JTextField NomeContinenteXSLT;
    private javax.swing.JTextField NomePais;
    private javax.swing.JTextField NomePaisAdicionar;
    private javax.swing.JTextField NomePaisFacto;
    private javax.swing.JTextField NomePaisRemover;
    private javax.swing.JTextField NumeroPop;
    private javax.swing.JTextField ValorARemover;
    private javax.swing.JTextField ValorARemover1;
    private javax.swing.JDialog XML_AdicionarPais;
    private javax.swing.JDialog XML_AlteraDadosFactos;
    private javax.swing.JDialog XML_AlterarDadosPaises;
    private javax.swing.JDialog XML_RemoverPais;
    private javax.swing.JTextArea XMLcodeArea;
    private javax.swing.JDialog XSLT_NomeContinente;
    private javax.swing.JDialog Xpath_FactoPais;
    private javax.swing.JDialog Xpath_FiltPaisPop;
    private javax.swing.JDialog Xpath_NomePais;
    private javax.swing.JDialog Xpath_PaisContinente;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItemAdicionarPais;
    private javax.swing.JMenuItem jMenuItemBandeirasDoPais;
    private javax.swing.JMenuItem jMenuItemBandeirasPaisesCont;
    private javax.swing.JMenuItem jMenuItemCapitaisPaises;
    private javax.swing.JMenuItem jMenuItemCrescPop5;
    private javax.swing.JMenuItem jMenuItemDTDFactos;
    private javax.swing.JMenuItem jMenuItemDTDPaises;
    private javax.swing.JMenuItem jMenuItemFichXMLFACTOS;
    private javax.swing.JMenuItem jMenuItemFichXMLPAISES;
    private javax.swing.JMenuItem jMenuItemJuncaoPaisesFactos;
    private javax.swing.JMenuItem jMenuItemListagemPaisesTXT;
    private javax.swing.JMenuItem jMenuItemPopContinente;
    private javax.swing.JMenuItem jMenuItemRemoverPais;
    private javax.swing.JMenuItem jMenuItemResetFicheiros;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JMenuItem jMenuItemXML5PaisesMaisPop;
    private javax.swing.JMenuItem jMenuItemXSDFactos;
    private javax.swing.JMenuItem jMenuItemXSDPaises;
    private javax.swing.JMenu jMenuValidar;
    private javax.swing.JMenu jMenuXML;
    private javax.swing.JMenu jMenuXPATH;
    private javax.swing.JMenu jMenuXSLT;
    private javax.swing.JMenuItem jMenuXpathFactoPais;
    private javax.swing.JMenuItem jMenuXpathFiltPaisPop;
    private javax.swing.JMenuItem jMenuXpathNomePais;
    private javax.swing.JMenuItem jMenuXpathPaisContinente;
    private javax.swing.JMenuItem jMenuXpathPaisPopuloso;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> nCamposModificar;
    private javax.swing.JComboBox<String> nCamposModificar1;
    private javax.swing.JComboBox<String> nModificacoes;
    private javax.swing.JComboBox<String> nModificacoes1;
    private javax.swing.JTextField paisModificarJanela3;
    private javax.swing.JTextField paisModificarJanela4;
    // End of variables declaration//GEN-END:variables
}
